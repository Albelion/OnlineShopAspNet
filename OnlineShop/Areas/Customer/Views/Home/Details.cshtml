@model OnlineShop.Models.ViewModels.ProductsCount
@{
    ViewData["Title"] = "Details";
}
@using OnlineShop.Utility
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    List<Products>products=HttpContextAccessor.HttpContext.Session.Get<List<Products>>("products");
    Products product=null;
    if(products!=null){
       product=products.FirstOrDefault(c=>c.Id==Model.Product.Id);
    }

}



<br />
<h2 class="text-info">Product details</h2>
<form asp-action="Details" method="post" enctype="multipart/form-data">
    <div class="p-4 rounded border row">
        <div asp-validation-summary="ModelOnly" class = "text-danger"></div>
        <div class="col-8">
        <div class="form-group row">
            <div class="col-4">
                <label asp-for="Product.Name"></label>
            </div>
            <div class = "col-8">
                <input type="hidden" asp-for="Product.Id" />
                <input asp-for="Product.Name" readonly class="form-control" />
            </div>
            <span asp-validation-for="Product.Name" class="text-danger"></span>
        </div>

        <div class="form-group row">
            <div class="col-4">
                <label asp-for="Product.Price"></label>
            </div>
            <div class = "col-8">
                <input asp-for="Product.Price" readonly class="form-control" />
            </div>
            <span asp-validation-for="Product.Price" class="text-danger"></span>
        </div>

        <div class="form-group row">
            <div class="col-4">
                <label asp-for="Product.ProductColor"></label>
            </div>
            <div class = "col-8">
                <input asp-for="Product.ProductColor" readonly class="form-control"/>
            </div>
            <span asp-validation-for="Product.ProductColor" class="text-danger"></span>
        </div>

        <div class="form-group row">
            <div class="col-4">
                <label asp-for="Product.ProductTypeId"></label>
            </div>
            <div class = "col-8">
                <input asp-for="Product.ProductTypeId" readonly class="form-control"/>

            </div>
            <span asp-validation-for="Product.ProductTypeId" class="text-danger"></span>
        </div>

        <div class="form-group row">
            <div class="col-4">
            </div>
            <div class="col-2">
                <input asp-for="Count"/>
            </div>
                
            <div class="col-3"></div>
            <div class = "col-3">
                @if(product!=null){
                    <button type="submit" class="btn btn-danger form-control" asp-action="Remove" asp-route-id="@Model.Product.Id">Remove to Cart</button>
                }
                else{
                    <input type="submit" class="btn btn-info form-control" value="Add to Cart"/>
                }
            </div>
        </div>
        <div class="form-group row">
            <div class="col-4"></div>
            <div class="col-4">
                <span asp-validation-for="Count" class="text-danger"></span>
            </div>
            <div class="col-4"></div>
        </div>

        <div class="form-group row">
            <div class="col-4"></div>
            <div class="col-4">
                @ViewBag.Message
            </div>
            <div class="col-4"></div>
        </div>

        <br />

        <div>
            <a asp-action="Index" class= "btn btn-success">Back to List </a>
        </div>

        </div>
        <div class="col-1"></div>
        <div class="col-3">
            <img src="~/@Model.Product.Image" width=100% height="250px" style = "border-radius: 5px;border: 1px solid #efefef"/>
            @if(Model.Product.IsAvailable){
                <img src="~/Images/instock-logo.png" width="140px" height="40px" class="d-block mx-auto"/>
            }
            else{
                <img src="~/Images/notinstock.png" width="170px" height="50px" class="d-block mx-auto"/>
            }

        </div>
 
    </div>
</form>

@section Scripts{
    @{await Html.RenderPartialAsync(partialViewName:"_ValidationScriptsPartial");}
}